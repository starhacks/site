{"version":3,"sources":["about/About.jsx","anecdotes/Anecdotes.jsx","contact/Contact.jsx","events/Events.jsx","subscribe/Subscribe.jsx","team/Team.jsx","questions/Questions.jsx","sponsors/Sponsors.jsx","App.js","constants/index.ts","reportWebVitals.js","index.js"],"names":["About","props","className","title","Anecdotes","Contact","Events","Subscribe","Team","Questions","Sponsors","App","ReactGA","initialize","pageview","window","location","pathname","search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAUeA,EAND,SAAAC,GAAK,OAAI,qBAAKC,UAAU,QAAf,SAAwBD,EAAME,SCMtCC,EANG,SAAAH,GAAK,OAAI,qBAAKC,UAAU,YAAf,SAA4BD,EAAME,SCM9CE,EANC,SAAAJ,GAAK,OAAI,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,SCM1CG,EANA,SAAAL,GAAK,OAAI,qBAAKC,UAAU,SAAf,SAAyBD,EAAME,SCMxCI,EANG,SAAAN,GAAK,OAAI,qBAAKC,UAAU,WAAf,SAA2BD,EAAME,SCM7CK,EANF,SAAAP,GAAK,OAAI,qBAAKC,UAAU,OAAf,SAAuBD,EAAME,SCMpCM,EANG,SAAAR,GAAK,OAAI,qBAAKC,UAAU,SAAf,SAAyBD,EAAME,SCM3CO,EANE,SAAAT,GAAK,OAAI,qBAAKC,UAAU,WAAf,SAA2BD,EAAME,SC2B5CQ,MAlBf,WAIE,OAHAC,IAAQC,WAAW,gBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAG1D,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWC,MCnBuB,gCDoBlC,cAAC,EAAD,CAAOA,MCnBQ,UDoBf,cAAC,EAAD,CAAQA,MCjBQ,WDkBhB,cAAC,EAAD,CAAWA,MCjBQ,cDkBnB,cAAC,EAAD,CAAMA,MCrBQ,SDsBd,cAAC,EAAD,CAAWA,MCjBqB,6BDkBhC,cAAC,EAAD,CAAUA,MCnBQ,aDoBlB,cAAC,EAAD,CAASA,MCvBQ,gBCSRgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b3b30ad8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst About = props => <div className=\"about\">{props.title}</div>\n\nAbout.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default About;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Anecdotes = props => <div className=\"anecdotes\">{props.title}</div>\n\nAnecdotes.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Anecdotes;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Contact = props => <div className=\"contact\">{props.title}</div>\n\nContact.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Contact;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Events = props => <div className=\"events\">{props.title}</div>\n\nEvents.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Events;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Subscribe = props => <div className=\"sponsors\">{props.title}</div>\n\nSubscribe.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Subscribe;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Team = props => <div className=\"team\">{props.title}</div>\n\nTeam.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Team;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Questions = props => <div className=\"events\">{props.title}</div>\n\nQuestions.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Questions;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Sponsors = props => <div className=\"sponsors\">{props.title}</div>\n\nSponsors.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Sponsors;","import './App.scss';\nimport ReactGA from 'react-ga';\nimport About from './about/About';\nimport Anecdotes from './anecdotes/Anecdotes';\nimport Contact from './contact/Contact';\nimport Events from './events/Events';\nimport * as Constants from './constants';\nimport Subscribe from './subscribe/Subscribe';\nimport Team from './team/Team';\nimport Questions from './questions/Questions';\nimport Sponsors from './sponsors/Sponsors';\n\n\nfunction App() {\n  ReactGA.initialize('G-FSN13RH97N');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n\n  return (\n    <div className=\"App\">\n      <Subscribe title={Constants.subscribeToOurNewsletter} />\n      <About title={Constants.about} />\n      <Events title={Constants.events} />\n      <Anecdotes title={Constants.anecdotes} />\n      <Team title={Constants.team} />\n      <Questions title={Constants.commonlyAskedQuestions} />\n      <Sponsors title={Constants.sponsors} />\n      <Contact title={Constants.contact} />\n    </div>\n  );\n}\n\nexport default App;\n","export const subscribeToOurNewsletter = \"Subscribe to our newsletter\";\nexport const about = \"About\";\nexport const team = \"Team\";\nexport const contact = \"Contact\";\nexport const events = \"Events\";\nexport const anecdotes = \"Anecdotes\";\nexport const sponsors = \"Sponsors\";\nexport const commonlyAskedQuestions = \"Commonly asked questions\";\nexport const upcomingEvents = {};\nexport const previousEvents = {};\nexport const questionsAndAnswer = {};\nexport const teamMembers = {};\nexport const pallete = {};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}